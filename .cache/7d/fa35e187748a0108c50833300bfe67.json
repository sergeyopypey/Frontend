{"id":"mailHandler.js","dependencies":[{"name":"C:\\Users\\Sergey\\Desktop\\Frontend\\package.json","includedInParent":true,"mtime":1676235011396}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sendEmail = sendEmail;\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction sendEmail() {\n  return _sendEmail.apply(this, arguments);\n}\nfunction _sendEmail() {\n  _sendEmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var useraddress, url, mail, response, json;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            useraddress = '19.02.02@mail.ru';\n            console.log('Sending Email');\n            url = 'http://localhost:8888/api/mail';\n            mail = {\n              address: useraddress,\n              days: 30,\n              user: 'Трошин Сергей Андреевич',\n              license: 'Лицензия на разработку ПО'\n            };\n            _context.next = 6;\n            return fetch(url, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n              },\n              body: JSON.stringify(mail)\n            });\n          case 6:\n            response = _context.sent;\n            if (!response.ok) {\n              _context.next = 15;\n              break;\n            }\n            _context.next = 10;\n            return response.json();\n          case 10:\n            json = _context.sent;\n            console.log(json);\n            return _context.abrupt(\"return\", json);\n          case 15:\n            alert(\"Ошибка HTTP: \" + response.status);\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _sendEmail.apply(this, arguments);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":47},"source":"mailHandler.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"mailHandler.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"mailHandler.js","original":{"line":2,"column":0}},{"generated":{"line":11,"column":0},"source":"mailHandler.js","original":{"line":2,"column":0}},{"generated":{"line":11,"column":9},"source":"mailHandler.js","original":{"line":1,"column":22},"name":"sendEmail"},{"generated":{"line":11,"column":18},"source":"mailHandler.js","original":{"line":1,"column":31}},{"generated":{"line":12,"column":2},"source":"mailHandler.js","original":{"line":1,"column":31}},{"generated":{"line":13,"column":0},"source":"mailHandler.js","original":{"line":1,"column":31}},{"generated":{"line":14,"column":0},"source":"mailHandler.js","original":{"line":1,"column":31}},{"generated":{"line":15,"column":2},"source":"mailHandler.js","original":{"line":1,"column":31}},{"generated":{"line":15,"column":74},"source":"mailHandler.js","original":{"line":1,"column":7}},{"generated":{"line":16,"column":4},"source":"mailHandler.js","original":{"line":1,"column":7}},{"generated":{"line":17,"column":4},"source":"mailHandler.js","original":{"line":1,"column":7}},{"generated":{"line":18,"column":6},"source":"mailHandler.js","original":{"line":1,"column":7}},{"generated":{"line":19,"column":8},"source":"mailHandler.js","original":{"line":1,"column":7}},{"generated":{"line":20,"column":10},"source":"mailHandler.js","original":{"line":1,"column":7}},{"generated":{"line":21,"column":12},"source":"mailHandler.js","original":{"line":2,"column":8},"name":"useraddress"},{"generated":{"line":21,"column":23},"source":"mailHandler.js","original":{"line":2,"column":19}},{"generated":{"line":21,"column":26},"source":"mailHandler.js","original":{"line":2,"column":22}},{"generated":{"line":21,"column":44},"source":"mailHandler.js","original":{"line":2,"column":40}},{"generated":{"line":22,"column":12},"source":"mailHandler.js","original":{"line":3,"column":4},"name":"console"},{"generated":{"line":22,"column":19},"source":"mailHandler.js","original":{"line":3,"column":11}},{"generated":{"line":22,"column":20},"source":"mailHandler.js","original":{"line":3,"column":12},"name":"log"},{"generated":{"line":22,"column":23},"source":"mailHandler.js","original":{"line":3,"column":15}},{"generated":{"line":22,"column":24},"source":"mailHandler.js","original":{"line":3,"column":16}},{"generated":{"line":22,"column":39},"source":"mailHandler.js","original":{"line":3,"column":31}},{"generated":{"line":22,"column":40},"source":"mailHandler.js","original":{"line":3,"column":32}},{"generated":{"line":23,"column":12},"source":"mailHandler.js","original":{"line":4,"column":8},"name":"url"},{"generated":{"line":23,"column":15},"source":"mailHandler.js","original":{"line":4,"column":11}},{"generated":{"line":23,"column":18},"source":"mailHandler.js","original":{"line":4,"column":14}},{"generated":{"line":23,"column":50},"source":"mailHandler.js","original":{"line":4,"column":46}},{"generated":{"line":24,"column":12},"source":"mailHandler.js","original":{"line":5,"column":8},"name":"mail"},{"generated":{"line":24,"column":16},"source":"mailHandler.js","original":{"line":5,"column":12}},{"generated":{"line":24,"column":19},"source":"mailHandler.js","original":{"line":5,"column":15}},{"generated":{"line":25,"column":14},"source":"mailHandler.js","original":{"line":6,"column":8},"name":"address"},{"generated":{"line":25,"column":21},"source":"mailHandler.js","original":{"line":6,"column":15}},{"generated":{"line":25,"column":23},"source":"mailHandler.js","original":{"line":6,"column":17},"name":"useraddress"},{"generated":{"line":25,"column":34},"source":"mailHandler.js","original":{"line":6,"column":28}},{"generated":{"line":26,"column":14},"source":"mailHandler.js","original":{"line":7,"column":8},"name":"days"},{"generated":{"line":26,"column":18},"source":"mailHandler.js","original":{"line":7,"column":12}},{"generated":{"line":26,"column":20},"source":"mailHandler.js","original":{"line":7,"column":14}},{"generated":{"line":26,"column":22},"source":"mailHandler.js","original":{"line":7,"column":16}},{"generated":{"line":27,"column":14},"source":"mailHandler.js","original":{"line":8,"column":8},"name":"user"},{"generated":{"line":27,"column":18},"source":"mailHandler.js","original":{"line":8,"column":12}},{"generated":{"line":27,"column":20},"source":"mailHandler.js","original":{"line":8,"column":14}},{"generated":{"line":27,"column":45},"source":"mailHandler.js","original":{"line":8,"column":39}},{"generated":{"line":28,"column":14},"source":"mailHandler.js","original":{"line":9,"column":8},"name":"license"},{"generated":{"line":28,"column":21},"source":"mailHandler.js","original":{"line":9,"column":15}},{"generated":{"line":28,"column":23},"source":"mailHandler.js","original":{"line":9,"column":17}},{"generated":{"line":29,"column":12},"source":"mailHandler.js","original":{"line":10,"column":4}},{"generated":{"line":29,"column":13},"source":"mailHandler.js","original":{"line":10,"column":5}},{"generated":{"line":30,"column":12},"source":"mailHandler.js","original":{"line":10,"column":5}},{"generated":{"line":31,"column":12},"source":"mailHandler.js","original":{"line":10,"column":5}},{"generated":{"line":31,"column":19},"source":"mailHandler.js","original":{"line":11,"column":25},"name":"fetch"},{"generated":{"line":31,"column":24},"source":"mailHandler.js","original":{"line":11,"column":30}},{"generated":{"line":31,"column":25},"source":"mailHandler.js","original":{"line":11,"column":31},"name":"url"},{"generated":{"line":31,"column":28},"source":"mailHandler.js","original":{"line":11,"column":34}},{"generated":{"line":31,"column":30},"source":"mailHandler.js","original":{"line":11,"column":36}},{"generated":{"line":32,"column":14},"source":"mailHandler.js","original":{"line":12,"column":8},"name":"method"},{"generated":{"line":32,"column":20},"source":"mailHandler.js","original":{"line":12,"column":14}},{"generated":{"line":32,"column":22},"source":"mailHandler.js","original":{"line":12,"column":16}},{"generated":{"line":32,"column":28},"source":"mailHandler.js","original":{"line":12,"column":22}},{"generated":{"line":33,"column":14},"source":"mailHandler.js","original":{"line":13,"column":8},"name":"headers"},{"generated":{"line":33,"column":21},"source":"mailHandler.js","original":{"line":13,"column":15}},{"generated":{"line":33,"column":23},"source":"mailHandler.js","original":{"line":13,"column":17}},{"generated":{"line":34,"column":16},"source":"mailHandler.js","original":{"line":13,"column":19}},{"generated":{"line":34,"column":30},"source":"mailHandler.js","original":{"line":13,"column":33}},{"generated":{"line":34,"column":32},"source":"mailHandler.js","original":{"line":13,"column":35}},{"generated":{"line":35,"column":14},"source":"mailHandler.js","original":{"line":13,"column":68}},{"generated":{"line":35,"column":15},"source":"mailHandler.js","original":{"line":13,"column":69}},{"generated":{"line":36,"column":14},"source":"mailHandler.js","original":{"line":14,"column":8},"name":"body"},{"generated":{"line":36,"column":18},"source":"mailHandler.js","original":{"line":14,"column":12}},{"generated":{"line":36,"column":20},"source":"mailHandler.js","original":{"line":14,"column":14},"name":"JSON"},{"generated":{"line":36,"column":24},"source":"mailHandler.js","original":{"line":14,"column":18}},{"generated":{"line":36,"column":25},"source":"mailHandler.js","original":{"line":14,"column":19},"name":"stringify"},{"generated":{"line":36,"column":34},"source":"mailHandler.js","original":{"line":14,"column":28}},{"generated":{"line":36,"column":35},"source":"mailHandler.js","original":{"line":14,"column":29},"name":"mail"},{"generated":{"line":36,"column":39},"source":"mailHandler.js","original":{"line":14,"column":33}},{"generated":{"line":37,"column":12},"source":"mailHandler.js","original":{"line":15,"column":4}},{"generated":{"line":37,"column":13},"source":"mailHandler.js","original":{"line":15,"column":5}},{"generated":{"line":37,"column":14},"source":"mailHandler.js","original":{"line":15,"column":6}},{"generated":{"line":38,"column":10},"source":"mailHandler.js","original":{"line":15,"column":6}},{"generated":{"line":39,"column":12},"source":"mailHandler.js","original":{"line":11,"column":8},"name":"response"},{"generated":{"line":39,"column":20},"source":"mailHandler.js","original":{"line":11,"column":16}},{"generated":{"line":40,"column":12},"source":"mailHandler.js","original":{"line":11,"column":16}},{"generated":{"line":40,"column":17},"source":"mailHandler.js","original":{"line":16,"column":8},"name":"response"},{"generated":{"line":40,"column":25},"source":"mailHandler.js","original":{"line":16,"column":16}},{"generated":{"line":40,"column":26},"source":"mailHandler.js","original":{"line":16,"column":17},"name":"ok"},{"generated":{"line":40,"column":28},"source":"mailHandler.js","original":{"line":16,"column":19}},{"generated":{"line":41,"column":14},"source":"mailHandler.js","original":{"line":16,"column":19}},{"generated":{"line":42,"column":14},"source":"mailHandler.js","original":{"line":16,"column":19}},{"generated":{"line":43,"column":12},"source":"mailHandler.js","original":{"line":16,"column":19}},{"generated":{"line":44,"column":12},"source":"mailHandler.js","original":{"line":16,"column":19}},{"generated":{"line":45,"column":12},"source":"mailHandler.js","original":{"line":16,"column":19}},{"generated":{"line":45,"column":19},"source":"mailHandler.js","original":{"line":17,"column":25},"name":"response"},{"generated":{"line":45,"column":27},"source":"mailHandler.js","original":{"line":17,"column":33}},{"generated":{"line":45,"column":28},"source":"mailHandler.js","original":{"line":17,"column":34},"name":"json"},{"generated":{"line":45,"column":32},"source":"mailHandler.js","original":{"line":17,"column":38}},{"generated":{"line":45,"column":34},"source":"mailHandler.js","original":{"line":17,"column":40}},{"generated":{"line":46,"column":10},"source":"mailHandler.js","original":{"line":17,"column":40}},{"generated":{"line":47,"column":12},"source":"mailHandler.js","original":{"line":17,"column":12},"name":"json"},{"generated":{"line":47,"column":16},"source":"mailHandler.js","original":{"line":17,"column":16}},{"generated":{"line":48,"column":12},"source":"mailHandler.js","original":{"line":18,"column":8},"name":"console"},{"generated":{"line":48,"column":19},"source":"mailHandler.js","original":{"line":18,"column":15}},{"generated":{"line":48,"column":20},"source":"mailHandler.js","original":{"line":18,"column":16},"name":"log"},{"generated":{"line":48,"column":23},"source":"mailHandler.js","original":{"line":18,"column":19}},{"generated":{"line":48,"column":24},"source":"mailHandler.js","original":{"line":18,"column":20},"name":"json"},{"generated":{"line":48,"column":28},"source":"mailHandler.js","original":{"line":18,"column":24}},{"generated":{"line":48,"column":29},"source":"mailHandler.js","original":{"line":18,"column":25}},{"generated":{"line":49,"column":12},"source":"mailHandler.js","original":{"line":18,"column":25}},{"generated":{"line":49,"column":45},"source":"mailHandler.js","original":{"line":19,"column":15},"name":"json"},{"generated":{"line":49,"column":49},"source":"mailHandler.js","original":{"line":19,"column":19}},{"generated":{"line":50,"column":10},"source":"mailHandler.js","original":{"line":19,"column":19}},{"generated":{"line":51,"column":12},"source":"mailHandler.js","original":{"line":20,"column":11},"name":"alert"},{"generated":{"line":51,"column":17},"source":"mailHandler.js","original":{"line":20,"column":16}},{"generated":{"line":51,"column":18},"source":"mailHandler.js","original":{"line":20,"column":17}},{"generated":{"line":51,"column":33},"source":"mailHandler.js","original":{"line":20,"column":32}},{"generated":{"line":51,"column":36},"source":"mailHandler.js","original":{"line":20,"column":35},"name":"response"},{"generated":{"line":51,"column":44},"source":"mailHandler.js","original":{"line":20,"column":43}},{"generated":{"line":51,"column":45},"source":"mailHandler.js","original":{"line":20,"column":44},"name":"status"},{"generated":{"line":51,"column":51},"source":"mailHandler.js","original":{"line":20,"column":50}},{"generated":{"line":51,"column":52},"source":"mailHandler.js","original":{"line":20,"column":51}},{"generated":{"line":52,"column":10},"source":"mailHandler.js","original":{"line":20,"column":51}},{"generated":{"line":53,"column":10},"source":"mailHandler.js","original":{"line":20,"column":51}},{"generated":{"line":54,"column":12},"source":"mailHandler.js","original":{"line":20,"column":51}},{"generated":{"line":55,"column":8},"source":"mailHandler.js","original":{"line":20,"column":51}},{"generated":{"line":56,"column":6},"source":"mailHandler.js","original":{"line":20,"column":51}},{"generated":{"line":57,"column":4},"source":"mailHandler.js","original":{"line":20,"column":51}},{"generated":{"line":58,"column":2},"source":"mailHandler.js","original":{"line":20,"column":51}},{"generated":{"line":58,"column":3},"source":"mailHandler.js","original":{"line":21,"column":1}},{"generated":{"line":59,"column":2},"source":"mailHandler.js","original":{"line":21,"column":1}},{"generated":{"line":60,"column":0},"source":"mailHandler.js","original":{"line":21,"column":1}}],"sources":{"mailHandler.js":"export async function sendEmail() {\r\n    let useraddress = '19.02.02@mail.ru'\r\n    console.log('Sending Email')\r\n    let url = 'http://localhost:8888/api/mail'\r\n    let mail = {\r\n        address: useraddress,\r\n        days: 30,\r\n        user: 'Трошин Сергей Андреевич',\r\n        license: 'Лицензия на разработку ПО'\r\n    }\r\n    let response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json;charset=utf-8' },\r\n        body: JSON.stringify(mail)\r\n    });\r\n    if (response.ok) {\r\n        let json = await response.json();\r\n        console.log(json)\r\n        return json\r\n    } else alert(\"Ошибка HTTP: \" + response.status)\r\n}"},"lineCount":null}},"error":null,"hash":"6b9e01dd9ebc4daa0645f054d023e0f4","cacheData":{"env":{}}}